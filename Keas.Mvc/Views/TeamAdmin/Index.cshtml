@model Keas.Core.Domain.Team

@{
    ViewData["Title"] = "Index";
}
        <div class="card">
            <div class="card-header-primary">
                <div class="card-head">
                    <h2>@Model.Name</h2>
                </div>
            </div>
            <div class="card-content">
                <p><b>@Html.DisplayNameFor(model => model.Name)</b></p>
                <p>@Html.DisplayFor(model => model.Name)</p>

                <p><b>FIS Orgs</b></p>
                @foreach (var org in Model.FISOrgs)
                {
                    <p>@org.ChartAndOrg <a asp-action="RemoveFISOrg" asp-route-fisorgId="@org.Id"><i class="fas fa-trash"></i></a></p>
                }
                <p><b>PPS Departments</b></p>
                @foreach (var ppsDept in Model.PpsDepartments)
                {
                    <p>@ppsDept.DepartmentName (@ppsDept.PpsDepartmentCode) <a asp-action="RemovePpsDepartment" asp-route-id="@ppsDept.Id"><i class="fas fa-trash"></i></a></p>
                }
            </div>
        </div>
        <div class="card">
            <div class="card-header-primary">
                <div class="card-head">
                    <h2>On/Off Boarding Emails</h2>
                    <small class="form-text text-muted">This is to notify when people are added, removed, or reactivated for the team.</small>
                </div>
            </div>
            <div class="card-content">
                <div class="col-lg-4">
                    <form asp-action="UpdateEmail">
                        @Html.HiddenFor(a => a.Id)
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <b><label asp-for="BoardingNotificationEmail" class="control-label"></label></b>
                            <input asp-for="BoardingNotificationEmail" class="form-control" />
                            <small id="emailHelp" class="form-text text-muted">Leave this blank if you don't want these emails.</small>
                            <span asp-validation-for="BoardingNotificationEmail" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Update Email" class="btn btn-primary" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
        @if (Model.Groups.Any())
        {
            <div class="card">
                <div class="card-header-primary">
                    <div class="card-head">
                        <h2>Groups your team belongs to</h2>
                        <small class="form-text text-muted">What is a Group?</small>
                        <small class="form-text text-muted">It is a way to report across multiple teams. Access is limited to reporting unless they have permissions in the team.</small>
                    </div>
                </div>
                <div class="card-content">
                    @foreach (var grp in Model.Groups)
                    {
                        var groupUsers = string.Join("; ", grp.Group.GroupPermissions.Select(a => $"{a.User.FirstName} {a.User.LastName}<{a.User.Email}>"));
                        <h4>Group Name:</h4>
                        <p>@grp.Group.Name</p>
                        <h4>Contact(s):</h4>
                        <p><a href="mailto: @groupUsers">@groupUsers</a></p>
                        <hr/>
                    }
                </div>
            </div>
        }

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
